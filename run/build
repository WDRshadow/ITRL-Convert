#!/usr/bin/env bash

set -e  # Exit on error

# Color definitions
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Get project root directory (parent directory of script location)
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"
BUILD_DIR="$PROJECT_DIR/build"
RUN_DIR="$PROJECT_DIR/run"

echo -e "${BLUE}[INFO]${NC} Starting project build..."
echo -e "${BLUE}[INFO]${NC} Project directory: $PROJECT_DIR"
echo -e "${BLUE}[INFO]${NC} Build directory: $BUILD_DIR"

# 1. Create build folder if it doesn't exist
if [ ! -d "$BUILD_DIR" ]; then
    echo -e "${YELLOW}[BUILD]${NC} Creating build directory: $BUILD_DIR"
    mkdir -p "$BUILD_DIR"
else
    echo -e "${BLUE}[INFO]${NC} Build directory already exists"
fi

# Enter build directory
cd "$BUILD_DIR"

# 2. Run CMake configuration
echo -e "${YELLOW}[CMAKE]${NC} Configuring CMake project..."
if cmake ..; then
    echo -e "${GREEN}[SUCCESS]${NC} CMake configuration successful"
else
    echo -e "${RED}[ERROR]${NC} CMake configuration failed"
    exit 1
fi

# 3. Build the project
echo -e "${YELLOW}[MAKE]${NC} Starting project compilation..."
if make -j$(nproc); then
    echo -e "${GREEN}[SUCCESS]${NC} Compilation successful"
else
    echo -e "${RED}[ERROR]${NC} Compilation failed"
    exit 1
fi

# 4. Check and copy binary file
BINARY_NAME="flir_stream"
BINARY_PATH="$BUILD_DIR/$BINARY_NAME"

if [ -f "$BINARY_PATH" ]; then
    echo -e "${YELLOW}[COPY]${NC} Copying binary file to run/ directory..."
    cp "$BINARY_PATH" "$RUN_DIR/"
    
    # Check if copy was successful
    if [ -f "$RUN_DIR/$BINARY_NAME" ]; then
        echo -e "${GREEN}[SUCCESS]${NC} Binary file successfully copied to: $RUN_DIR/$BINARY_NAME"
        # Ensure binary file is executable
        chmod +x "$RUN_DIR/$BINARY_NAME"
        echo -e "${GREEN}[SUCCESS]${NC} Build completed!"
    else
        echo -e "${RED}[ERROR]${NC} Failed to copy binary file"
        exit 1
    fi
else
    echo -e "${RED}[ERROR]${NC} Binary file not found: $BINARY_PATH"
    echo -e "${YELLOW}[INFO]${NC} Checking files in build directory:"
    ls -la "$BUILD_DIR"
    exit 1
fi

echo -e "${BLUE}[INFO]${NC} You can now run: $RUN_DIR/$BINARY_NAME"